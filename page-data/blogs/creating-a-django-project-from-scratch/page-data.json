{"componentChunkName":"component---src-templates-blog-details-js","path":"/blogs/creating-a-django-project-from-scratch","result":{"data":{"markdownRemark":{"html":"<p><a href=\"/pdf/Creating%20a%20simple%20django%20project.pdf\">Download as pdf</a></p>\n<h1>Create Django Project</h1>\n<pre><code class=\"language-bash\"># Create a virtual environment\npython -m venv env\n</code></pre>\n<pre><code class=\"language-bash\"># Activate the virtual environment\nsource env/bin/activate\n</code></pre>\n<pre><code class=\"language-bash\">pip install django\n</code></pre>\n<pre><code class=\"language-bash\"># Start the django project\ndjango-admin startproject aws_demo_project \ncd aws_demo_project\n</code></pre>\n<pre><code class=\"language-bash\"># Create an app for our project\npython manage.py startapp aws_app\n</code></pre>\n<pre><code class=\"language-python\"># aws_demo_project/settings.py\n\nINSTALLED_APPS = [\n    ...\n    \n    'aws_app',\n]\n</code></pre>\n<pre><code class=\"language-python\"># aws_demo_project/urls.py\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('aws_app.urls')),\n]\n\n</code></pre>\n<p>Create a new file: <code>aws_app/urls.py</code></p>\n<pre><code class=\"language-python\"># aws_app/urls.py\n\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name=\"index\"),\n    path('&#x3C;str:username>', views.greet, name='greet'),\n]\n</code></pre>\n<p>We have not yet created the views so lets create that:</p>\n<pre><code class=\"language-python\"># aws_app/views.py\n\nfrom django.shortcuts import render\n\ndef index(request):\n    return render(request, 'aws_app/index.html')\n\ndef greet(request, username):\n    return render(request, 'aws_app/greet.html', {\n        \"username\" : username\n    })\n</code></pre>\n<p>We have not yet created the templates so lets create it:</p>\n<p>create <code>aws_app/templates/aws_app/index.html</code> and <code>aws_app/templates/aws_app/greet.html</code></p>\n<p>index.html</p>\n<pre><code class=\"language-html\">&#x3C;!DOCTYPE html>\n&#x3C;html lang=\"en\">\n&#x3C;head>\n    &#x3C;meta charset=\"UTF-8\">\n    &#x3C;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    &#x3C;title>Index&#x3C;/title>\n&#x3C;/head>\n&#x3C;body>\n    &#x3C;h1>This is the main page&#x3C;/h1>\n&#x3C;/body>\n&#x3C;/html>\n</code></pre>\n<p>greet.html</p>\n<pre><code class=\"language-html\">&#x3C;!DOCTYPE html>\n&#x3C;html lang=\"en\">\n&#x3C;head>\n    &#x3C;meta charset=\"UTF-8\">\n    &#x3C;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    &#x3C;title>{{username}}&#x3C;/title>\n&#x3C;/head>\n&#x3C;body>\n    &#x3C;h1>Hello {{username}}&#x3C;/h1>\n&#x3C;/body>\n&#x3C;/html>\n</code></pre>\n<p>Now lets see whether this is working:<br>\nstart the server by:</p>\n<pre><code class=\"language-bash\">python manage.py runserver\n</code></pre>\n<p>In the browser go to <code>http://localhost:8000</code><br>\nYou can see the index.html</p>\n<p>goto <code>http://localhost:8000/rahul</code><br>\nyou can see hello rahul</p>\n<p>Which means everything is working.</p>\n<h2>Now lets create some database stuff:</h2>\n<h3>First install mysql in the machine</h3>\n<pre><code class=\"language-bash\">sudo apt install mysql-server\nsudo mysql_secure_installation\n</code></pre>\n<p>Now lets enter the mysql and create a new user</p>\n<pre><code>sudo mysql\nCREATE USER 'rahul'@'localhost' IDENTIFIED BY '123456';\nGRANT ALL PRIVILEGES ON *.* TO 'rahul'@'localhost' WITH GRANT OPTION;\nexit\n</code></pre>\n<p>Now lets try to enter mysql using newly created user</p>\n<pre><code class=\"language-bash\">mysql -u rahul -p\n\n# Lets create a database\nCREATE DATABASE aws_demo_db;\n\nSHOW DATABASES;\n#  This will show all the databases\n</code></pre>\n<h3>Now lets come back to django</h3>\n<p>To connect django with mysql install mysqlclient</p>\n<pre><code class=\"language-bash\">pip install mysqlclient\n</code></pre>\n<blockquote>\n<p>If this shows any errorÂ </p>\n<pre><code class=\"language-bash\">sudo apt-get install python-dev python3-dev\nsudo apt-get install libmysqlclient-dev  \npip install mysqlclient\n</code></pre>\n</blockquote>\n<pre><code class=\"language-python\"># aws_demo_project/settings.py\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'aws_demo_db',\n        'USER': 'rahul',\n        'PASSWORD': '123456',\n        'HOST': 'localhost',\n        'PORT': '3306',\n    }\n}\n</code></pre>\n<p>Now lets migrate all the databases provided by the django itself, for that</p>\n<pre><code class=\"language-bash\">python manage.py migrate\n</code></pre>\n<p>Now lets check the tables are created in the database, for that ,</p>\n<pre><code class=\"language-bash\">mysql -u rahul -p\nUSE aws_demo_db;\nSHOW TABLES;\n\n#  You can see this, Thes are the tables created by django itself\n+----------------------------+\n| Tables_in_aws_demo_db      |\n+----------------------------+\n| auth_group                 |\n| auth_group_permissions     |\n| auth_permission            |\n| auth_user                  |\n| auth_user_groups           |\n| auth_user_user_permissions |\n| django_admin_log           |\n| django_content_type        |\n| django_migrations          |\n| django_session             |\n+----------------------------+\n\n</code></pre>\n<h3>Now lets create our own model !!</h3>\n<pre><code class=\"language-python\"># aws_app/models.py\nfrom django.db import models\n\nclass Post(models.Model):\n    title = models.CharField(max_length=50)\n    content = models.TextField()\n    image = models.ImageField(upload_to='uploads/')\n\n    def __str__(self):\n        return self.title\n\n</code></pre>\n<p>Inorder to add images we have to install pillow:</p>\n<pre><code class=\"language-bash\">pip install pillow\n</code></pre>\n<p>Now lets migrate this to the database for that:</p>\n<pre><code class=\"language-bash\">python manage.py makemigrations\npython manage.py migrate\n</code></pre>\n<p>Now if you check the tables in our database you can see this table there!!</p>\n<h3>Django Admin</h3>\n<p>so inorder to add posts we want to access admin panel so lets create the admin site,</p>\n<pre><code class=\"language-bash\">python manage.py createsuperuser\n</code></pre>\n<p>Inorder to add the model to the admin site:</p>\n<pre><code class=\"language-python\"># aws_app/admin.py\n\nfrom django.contrib import admin\nfrom .models import Post\n\nadmin.site.register(Post)\n</code></pre>\n<p>Now if you go to <code>http://localhost:8000/admin/</code>\nYou can see the Posts model there, You can add new post there</p>\n<p>After uploading an image, you can see that image will be saved in the uploads folder in our project</p>\n<h3>Now lets render the details of database to our templates</h3>\n<pre><code class=\"language-python\"># aws_app/views.py\nfrom .models import Post\n\ndef posts(request):\n    posts = Post.objects.all()\n    return render(request, 'aws_app/posts.html', {\n        \"posts\" : posts\n    })\n</code></pre>\n<p>Now lets create the url for this view</p>\n<pre><code class=\"language-python\"># aws_app/urls.py\n\nurlpatterns = [\n \t...\n\t\n    path('posts/', views.posts, name=\"posts\"),\n]\n\n</code></pre>\n<p>We didn't created the html page so lets create the template</p>\n<p>create a new file `aws_app/templates/aws_app/posts.html</p>\n<pre><code class=\"language-html\">&#x3C;!--posts.html -->\n\n&#x3C;!DOCTYPE html>\n&#x3C;html lang=\"en\">\n&#x3C;head>\n    &#x3C;meta charset=\"UTF-8\">\n    &#x3C;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    &#x3C;title>Posts&#x3C;/title>\n&#x3C;/head>\n&#x3C;body>\n    &#x3C;h1>ALL POSTS&#x3C;/h1>\n    \n    {% for post in posts %}\n        &#x3C;div class=\"post\">\n            &#x3C;h1>{{post.title}}&#x3C;/h1>\n            &#x3C;img src=\"{{post.image.url}}\" alt=\"\">\n            &#x3C;p>{{post.content}}&#x3C;/p>\n        &#x3C;/div>\n    {% endfor %}\n&#x3C;/body>\n&#x3C;/html>\n</code></pre>\n<p>Now lets add some styling for this webpage</p>\n<p>create this folder:\n<code>aws_app/css/index.css</code></p>\n<p>Add this to index.css</p>\n<pre><code class=\"language-css\">.post{\n    width: 60%;\n    margin: auto;\n\tmargin-bottom: 30px;\n    background-color: #222;\n    color: #fff;\n    padding: 30px;\n}\n.post h1{\n    color: #ffc107;\n}\n.post img{\n    width: 300px;\n}\n</code></pre>\n<p>{% raw %}</p>\n<p>Now lets link this css to the <code>posts.html</code>\nFor that add <code>{% load static %}</code> at the top of <code>posts.html</code> and inside head lets link the css by <code>&#x3C;link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\"></code></p>\n<p>{% endraw %}</p>\n<p>if you go to <code>http://localhost:8000/posts/</code>\nYou can see the posts that you have entered through the admin panel</p>\n<p>If the styling doesnt happen, just restart the server, it will be fine\n<strong>But wait where is the image ???</strong></p>\n<p>inorder to render the image in webpage we have to do some additional stuffs :</p>\n<pre><code class=\"language-python\"># aws_demo_project/settings.py\n\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/uploads/'\n</code></pre>\n<pre><code class=\"language-python\"># aws_demo_project/urls.py\nfrom django.conf import settings\nfrom django.conf.urls.static import static\n\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n</code></pre>\n<p>now just restart the server and delete the posts that is created and also you can delete the uploads folder in your project folder</p>\n<p>Now just create a new post and woow, you can see the posts in the webpage, at <code>http://localhost:8000/posts/</code></p>\n<p>Now before deploying the application we have to gather all the static files:</p>\n<p>for that add this line to <code>aws_demo_project/settings.py</code> :</p>\n<pre><code class=\"language-python\">STATIC_ROOT = os.path.join(BASE_DIR, 'static')\n</code></pre>\n<p>Then to gather all the static files, just type:</p>\n<pre><code class=\"language-bash\">python manage.py collectstatic\n</code></pre>\n<p>now you will see that a new static folder is created in the root directory of you project. This is similar to the media folder creted earlier, when we upload an image.</p>\n<pre><code class=\"language-python\"># aws_demo_project\n\nALLOWED_HOSTS = ['*']\n</code></pre>\n<p>Finally lets create a requirements.txt file by</p>\n<p><code>pip freeze > requirements.txt</code></p>\n<p>Now our project is ready for deployment</p>\n<ul>\n<li><a href=\"/blogs/deploying-django-application-to-aws\">Deploy to AWS</a></li>\n<li><a href=\"/blogs/deploying-django-application-to-heroku\">Deploy to heroku</a></li>\n</ul>","frontmatter":{"title":"Create a django Project from scratch","description":"We are going to create a complete django application from scratch it contains all scenarios","meta_desc":"We are going to create a complete django application from scratch it contains all scenarios"}}},"pageContext":{"slug":"creating-a-django-project-from-scratch"}},"staticQueryHashes":["4202924991"]}