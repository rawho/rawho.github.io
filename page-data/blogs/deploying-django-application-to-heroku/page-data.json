{"componentChunkName":"component---src-templates-blog-details-js","path":"/blogs/deploying-django-application-to-heroku","result":{"data":{"markdownRemark":{"html":"<p><a href=\"/pdf/deploy%20django%20app%20to%20heroku.pdf\">Download as pdf</a></p>\n<h1>Deploy Django app to heroku for free</h1>\n<h3>Prerequisite:</h3>\n<ul>\n<li><a href=\"/blogs/creating-a-django-project-from-scratch\">Django project</a></li>\n<li>an account on <a href=\"https://heroku.com\">heroku</a></li>\n<li>Note the database should be postgresql</li>\n</ul>\n<h2>Postgres database in django</h2>\n<h3>install postgres</h3>\n<pre><code>sudo apt install postgresql postgresql-contrib\n</code></pre>\n<p>A user with username postgres will be created automatically, so login as postgres user by:</p>\n<pre><code>sudo su - postgres\n</code></pre>\n<p>When inside the PostgreSQL shell session, execute the following command to enter the console:</p>\n<pre><code>psql\n</code></pre>\n<h3>Create database and user</h3>\n<pre><code>CREATE DATABASE heroku_demo_db;\nCREATE USER rahul WITH PASSWORD '123456';\nALTER ROLE rahul SET client_encoding TO 'utf-8';\nGRANT ALL PRIVILEGES ON DATABASE heroku_demo_db TO rahul;\n</code></pre>\n<p>install packages for postgresql for django</p>\n<pre><code>pip install psycopg2\n</code></pre>\n<p>if this shows some error:</p>\n<pre><code class=\"language-bash\">sudo apt-get install libpq-dev python3-dev\n</code></pre>\n<pre><code class=\"language-python\"># settings.py\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': 'heroku_demo_db', \n        'USER': 'rahul', \n        'PASSWORD': '123456',\n        'HOST': '127.0.0.1', \n        'PORT': '5432',\n    }\n}\n</code></pre>\n<p>Then lets migrate the datas</p>\n<pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre>\n<p>To see the databases:</p>\n<pre><code>sudo su - postgres\npsql\n\n&#x3C;!-- To list all tables -->\n\\l\n\n&#x3C;!-- To use heroku_demo_db -->\n\\c heroku_demo_db\n\n&#x3C;!-- To list all databases in this table -->\n\\dt\n</code></pre>\n<h2>Install heroku cli</h2>\n<pre><code class=\"language-bash\">sudo snap install --classic heroku\n</code></pre>\n<p>Authenticate heroku</p>\n<pre><code>heroku login\n</code></pre>\n<h2>Configure django app for heroku</h2>\n<pre><code>touch Procfile\n</code></pre>\n<p>Open the Procfile and add this:</p>\n<pre><code>web: gunicorn projectname.wsgi --log-file -\n</code></pre>\n<p>install some packages</p>\n<pre><code class=\"language-bash\">pip install gunicorn dj-database-url whitenoise\n</code></pre>\n<pre><code class=\"language-bash\">pip install psycopg2\n</code></pre>\n<p>if this shows some error:</p>\n<pre><code class=\"language-bash\">sudo apt-get install libpq-dev python3-dev\n</code></pre>\n<p>add theese to the requirements.txt</p>\n<pre><code>pip freeze > requirements.txt\n</code></pre>\n<pre><code class=\"language-python\">#  settings.py\n\n\nMIDDLEWARE = [\n    'whitenoise.middleware.WhiteNoiseMiddleware',\n \t...   \n]\n\n#  Add configuration for static files storage using whitenoise\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\n\n\n# Database settings\nimport dj_database_url \nprod_db  =  dj_database_url.config(conn_max_age=500)\nDATABASES['default'].update(prod_db)\n\n</code></pre>\n<h2>Connecting to heroku</h2>\n<p>Lets create an app in heroku, the name should be unique</p>\n<pre><code>heroku create heroku-deploy-django\n</code></pre>\n<p>Make sure that the allowed host is set</p>\n<pre><code>git init \nheroku git:remote -a heroku-deploy-django\ngit add --all\ngit commit -m \"initial commit\"\ngit push heroku master\n</code></pre>\n<blockquote>\n<p>If you get an error message with collectstatic, simply disable it by instructing Heroku to ignore running the <code>manage.py collecstatic</code> command during the deployment process.</p>\n</blockquote>\n<pre><code>heroku config:set     DISABLE_COLLECTSTATIC=1  \n</code></pre>\n<p>Otherwise you have to set static url and static root correctly</p>\n<pre><code>heroku run python manage.py migrate\nheroku run python manage.py createsuperuser\n</code></pre>\n<ul>\n<li><a href=\"/blogs/deploying-django-application-to-aws\">Deploy django app to aws</a></li>\n</ul>","frontmatter":{"title":"Deploy Django application to Heroku","description":"Are you worried of deploying a django application, In this blog you can see how to deploy django app to heroku"}}},"pageContext":{"slug":"deploying-django-application-to-heroku"}},"staticQueryHashes":[]}