{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/pages/portfolio.js"],"names":["Portfolio","projects","data","allMarkdownRemark","nodes","useState","AllProjects","setAllProjects","handleClick","e","target","getAttribute","parentElement","querySelector","classList","remove","add","p","filter","project","frontmatter","data_category","title","description","className","id","type","onClick","data-filter","map","key","data-category","fluid","img_path","childImageSharp","alt","href","github_link","style","display","website_link","right","fontSize","info_link"],"mappings":"qOAMe,SAASA,EAAT,GAA4B,IACrCC,EADoC,EAAPC,KACbC,kBAAkBC,MAEtC,GAAsCC,cAASJ,GAAxCK,EAAP,KAAoBC,EAApB,KAGMC,EAAc,SAACC,GAEnB,GAA4C,QAAzCA,EAAEC,OAAOC,aAAa,eAIvB,OAHAJ,EAAeN,GACfQ,EAAEC,OAAOE,cAAcC,cAAc,WAAWC,UAAUC,OAAO,eACjEN,EAAEC,OAAOI,UAAUE,IAAI,UAIzB,IAAIC,EAAIhB,EAASiB,QAAO,SAAAC,GAAO,OAAIA,EAAQC,YAAYC,gBAAkBZ,EAAEC,OAAOC,aAAa,kBAC/FJ,EAAeU,GACfR,EAAEC,OAAOE,cAAcC,cAAc,WAAWC,UAAUC,OAAO,UACjEN,EAAEC,OAAOI,UAAUE,IAAI,WAQzB,OACE,gBAAC,IAAD,KACA,gBAAC,IAAD,CAAKM,MAAM,WAAWC,YAAY,6CAChC,2BAASC,UAAU,2BAA2BC,GAAG,aAC/C,uBAAKD,UAAU,aACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,yBACb,wCAGJ,uBAAKA,UAAU,OACb,uBAAKA,UAAU,4BACb,0BAAQE,KAAK,SAASC,QAAS,SAAAlB,GAAC,OAAID,EAAYC,IAAIe,UAAU,SAASI,cAAY,OAAnF,OAGA,0BAAQF,KAAK,SAASC,QAAS,SAAAlB,GAAC,OAAID,EAAYC,IAAImB,cAAY,cAAhE,cAGA,0BAAQF,KAAK,SAASC,QAAS,SAAAlB,GAAC,OAAID,EAAYC,IAAImB,cAAY,UAAhE,UAGA,0BAAQF,KAAK,SAASC,QAAS,SAAAlB,GAAC,OAAID,EAAYC,IAAImB,cAAY,UAAhE,UAGA,0BAAQF,KAAK,SAASC,QAAS,SAAAlB,GAAC,OAAID,EAAYC,IAAImB,cAAY,cAAhE,gBAKJ,uBAAKJ,UAAU,OACZlB,EAAYuB,KAAI,SAAAV,GAAO,OACtB,uBAAKW,IAAKX,EAAQM,GAAID,UAAU,yBAAyBO,gBAAgBZ,EAAQC,YAAYC,eAC3F,uBAAKG,UAAU,oCACX,uBAAKA,UAAU,iBACX,gBAAC,IAAD,CAAKQ,MAAOb,EAAQC,YAAYa,SAASC,gBAAgBF,MAAOG,IAAG,WAAahB,EAAQC,YAAYE,SAExG,uBAAKE,UAAU,kBACX,0BAAML,EAAQC,YAAYE,OAC1B,qBAAGc,KAAOjB,EAAQC,YAAYiB,YAAc3B,OAAO,UAC/C,uBAAKc,UAAU,OAAOc,MAAO,CAACC,QAAS,SACnC,qBAAGf,UAAU,mBAGpBL,EAAQC,YAAYoB,aAAiB,qBAAGJ,KAAOjB,EAAQC,YAAYoB,aAAe9B,OAAO,UACtF,uBAAKc,UAAU,OAAOc,MAAO,CAACG,MAAO,SACjC,qBAAGjB,UAAU,aAAac,MAAO,CAACI,SAAU,YAE7C,GAGNvB,EAAQC,YAAYuB,UAAa,qBAAGP,KAAOjB,EAAQC,YAAYuB,UAAYjC,OAAO,UAC/E,uBAAKc,UAAU,OAAOc,MAAO,CAACG,MAAO,UACjC,qBAAGjB,UAAU,oBAAoBc,MAAO,CAACI,SAAU,YAEpD","file":"component---src-pages-portfolio-js-73bdde96bab6ca549db9.js","sourcesContent":["import { graphql } from \"gatsby\"\nimport React, { useState } from \"react\"\nimport Layout from \"../components/Layout/Layout\"\nimport Img from \"gatsby-image\"\nimport SEO from \"../components/SEO/Seo\"\n\nexport default function Portfolio({data}) {\n  let projects = data.allMarkdownRemark.nodes\n\n  const [AllProjects, setAllProjects] = useState(projects)\n  \n  \n  const handleClick = (e) => {\n    \n    if(e.target.getAttribute(\"data-filter\") === \"all\"){\n      setAllProjects(projects)\n      e.target.parentElement.querySelector('.active').classList.remove('active') \n      e.target.classList.add('active')\n      return\n    }\n\n    let p = projects.filter(project => project.frontmatter.data_category === e.target.getAttribute(\"data-filter\"))\n    setAllProjects(p)\n    e.target.parentElement.querySelector('.active').classList.remove('active') \n    e.target.classList.add('active')\n\n    \n    \n  }\n\n\n\n  return (\n    <Layout>\n    <SEO title=\"Projects\" description=\"All the amazing Projects done by Rahul T\" />\n      <section className=\"portfolio section active\" id=\"portfolio\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"section-title padd-15\">\n              <h2>Projects</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"portfolio-filter padd-15\">\n              <button type=\"button\" onClick={e => handleClick(e)} className=\"active\" data-filter=\"all\">\n                All\n              </button>\n              <button type=\"button\" onClick={e => handleClick(e)} data-filter=\"web-design\">\n                Web Design\n              </button>\n              <button type=\"button\" onClick={e => handleClick(e)} data-filter=\"django\">\n                Django\n              </button>\n              <button type=\"button\" onClick={e => handleClick(e)} data-filter=\"python\">\n                Python\n              </button>\n              <button type=\"button\" onClick={e => handleClick(e)} data-filter=\"javascript\">\n                Javascript\n              </button>\n            </div>\n          </div>\n          <div className=\"row\">\n            {AllProjects.map(project => (\n              <div key={project.id} className=\"portfolio-item padd-15\" data-category={ project.frontmatter.data_category }>\n                <div className=\"portfolio-item-inner shadow-dark\">\n                    <div className=\"portfolio-img\">\n                        <Img fluid={project.frontmatter.img_path.childImageSharp.fluid} alt={`project-${project.frontmatter.title}`} />\n                    </div>\n                    <div className=\"portfolio-info\">\n                        <h4>{ project.frontmatter.title }</h4>\n                        <a href={ project.frontmatter.github_link } target=\"_blank\">\n                            <div className=\"icon\" style={{display: \"flex\"}}>\n                                <i className=\"fa fa-github\"></i>\n                            </div>\n                        </a>\n                        {project.frontmatter.website_link ?   <a href={ project.frontmatter.website_link } target=\"_blank\">\n                            <div className=\"icon\" style={{right: \"90px\"}}>\n                                <i className=\"fa fa-link\" style={{fontSize: \"20px\"}}></i>\n                            </div>\n                        </a> : \"\"}\n                       \n                        \n                        {project.frontmatter.info_link ?  <a href={ project.frontmatter.info_link } target=\"_blank\">\n                            <div className=\"icon\" style={{right: \"130px\"}}>\n                                <i className=\"fa fa-info-circle\" style={{fontSize: \"20px\"}}></i>\n                            </div>\n                        </a> : \"\"}\n                       \n                    </div>\n                </div>\n            </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\n\n// export page query\n\nexport const query = graphql`\nquery ProjectsPage {\n  allMarkdownRemark(filter: {frontmatter: {layout: {eq: \"projects\"}}}) {\n    nodes {\n      frontmatter {\n        github_link\n        data_category\n        img_path {\n          id\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        title\n        website_link\n      }\n      id\n    }\n  }\n}\n\n`"],"sourceRoot":""}